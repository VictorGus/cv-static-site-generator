(ns app.static
  (:require [hiccup.core :as hc]
            [app.html    :as cv]
            [org.httpkit.sni-client :as sni-client]
            [org.httpkit.client :as http]
            [clojure.java.io :as io]
            [clojure.string :as str]
            [clojure.walk :as walk]))

(alter-var-root #'org.httpkit.client/*default-client* (fn [_] sni-client/default-client))

(defmacro get-static []
  (let [r (str/join
           " "
           (reduce (fn [acc f]
                     (if (.isDirectory f)
                       (into acc (map (fn [el]
                                        (str (.getName f) "/" (.getName el)))
                                      (filter #(not (.isDirectory %)) (file-seq f))))
                       (if (not (some
                                 (fn [el]
                                   (re-find (re-pattern (.getName f)) el))
                                 acc))
                         (conj acc (.getName f))
                         acc)))
                   []
                   (->> (str (System/getProperty "user.dir") "/resources" "/public")
                        io/file
                        file-seq
                        (filter #(not (= (.getName %) "public"))))))]
    `~r))

(defn save-public-files [path]
  (let [items (str/split (get-static) #" ")]
    (println items)
    (io/make-parents (format "%s/public/%s" path (first items)))

    (doseq [item items]
      (with-open [in (io/input-stream
                      (io/resource (str "public/" item)))
                  out (io/output-stream (str path "/public/" item))]
        (io/copy in out)))))

(defn save-remote-image [path url]
  (let [file-name (-> url (str/split #"\/") last)
        path* (str path "/static/" file-name)
        relative-path (str "./static/" file-name)]
    (io/make-parents path*)
    (with-open [in (io/input-stream (:body @(http/get url)))
                out (io/output-stream path*)]
      (io/copy in out))
    relative-path))

(defn pull-remote-resources [{:keys [output-path] :as config}]
  (walk/postwalk
   (fn [el]
     (if (and (string? el)
              (and
               (str/includes? el "http")
               (or
                (str/includes? el ".png")
                (str/includes? el ".jpg")
                (str/includes? el ".jpeg"))))
       (save-remote-image output-path el)
       el))
   config))

(defn spit-cv-site [{:keys [output-path] :as config}]
  (let [config* (pull-remote-resources config)
        _ (save-public-files output-path)]
    (spit
     (str output-path "/index.html")
     (hc/html (cv/cv-as-hiccup config*)))))

(comment

  (spit-cv-site {:output-path "/home/viktor/Pet-Projects/cv-static-site-generator/output"
                 :language :russian
                 :about  {:photo "/home/viktor/Pet-Projects/cv-static-site-generator/resources/public/photo/photo_2022-10-24_10-09-49.jpg"
                          :text "A Data Engineer passionate about Data Science üìä. I like automating things, building pipelines, exploring scalability problems, improving efficiency and performance tuning. I‚Äôm a strong advocate for üìú open source, ‚òÅÔ∏è Cloud computing, üöÄ DevOps, üÜï Innovation and Automation"
                          :name  "Viktor Gusakov"
                          :education [{:university "Saint Petersburg Electrotechnical University \"LETI\""
                                       :faculty    "Faculty of Computer Science and Technology (Bachelor)"
                                       :department ""
                                       :graduation "2019"}
                                      {:university "Saint Petersburg Electrotechnical University \"LETI\""
                                       :faculty    "Faculty of Computer Science and Technology (Master)"
                                       :graduation "2021"}]
                          :interests ["foo bar"]
                          :contacts [{:name "GitHub" :type "github" :url "https://github.com/VictorGus"}
                                     {:name "retaow@gmail.com" :type "e-mail"}
                                     {:name "VictorGus" :type "telegram"}
                                     {:name "Habr Career" :type "habr" :url "https://career.habr.com/victor-gusakov"}
                                     {:name "Medium" :type "medium" :url "https://medium.com/@VictorGus"}]}
                 :publications [{:description "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Pharetra vel turpis nunc eget lorem dolor sed viverra ipsum"
                                 :name "Foo bar"
                                 :url "https://google.com"
                                 :photo "https://www.dankultura.org/wp-content/uploads/2015/10/Article-Writing-Can-be-a-Sure-Wager.jpg"}
                                {:description "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Pharetra vel turpis nunc eget lorem dolor sed viverra ipsum"
                                 :name "Foo bar"
                                 :url "https://google.com"
                                 :photo "https://www.dankultura.org/wp-content/uploads/2015/10/Article-Writing-Can-be-a-Sure-Wager.jpg"}
                                {:description "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Pharetra vel turpis nunc eget lorem dolor sed viverra ipsum"
                                 :name "Foo bar"
                                 :url "https://google.com"
                                 :photo "https://www.dankultura.org/wp-content/uploads/2015/10/Article-Writing-Can-be-a-Sure-Wager.jpg"}]
                 :projects [{:description "–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞–±–æ—Ç—ã –∫—É–ª–µ—Ä–∞"
                             :technologies ["C" "GTK" "Linux"]
                             :highlights ["–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω GUI —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ GTK"
                                          "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—É–ª–µ—Ä–æ–º –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤ Linux(Raspberry Pi OS)"
                                          "–ú–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"]
                             :name "–°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–Ω–µ—à–Ω–∏–º –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ–º CPU –¥–ª—è Raspberry Pi"
                             :url "https://github.com/VictorGus/cv-static-site-generator"
                             :photo "https://cdn-reichelt.de/bilder/web/xxl_ws/A300/RPI_CASE_STACKP4_01.png"}
                            ]
                 :accomplishments [{:title "Foo bar"
                                    :subtitle "Foo"
                                    :date "Feb 21"
                                    :link "http://localhost:3333"
                                    :text "Foo bar barr get test brr"}
                                   {:title "Foo bar"
                                    :subtitle "Foo"
                                    :date "Feb 21"
                                    :link "http://localhost:3333"
                                    :text "Foo bar barr get test brr"}]
                 :experience [{:company {:name "–û–û–û ¬´–•–≠–õ–° –°–ê–ú–£–†–ê–ò¬ª (Health Samurai)"
                                         :location "–†–§, –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥"}
                               :position "C—Ç–∞–∂–µ—Ä"
                               :period "–Ø–Ω–≤–∞—Ä—å 2019 - –ê–≤–≥—É—Å—Ç 2019"
                               :highlights ["–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ open source —Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö"
                                            "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –º–æ–¥—É–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö"]
                               :technologies ["Clojure" "PostgreSQL" "FHIR" "Git"]}
                              {:company {:name "–û–û–û ¬´–•–≠–õ–° –°–ê–ú–£–†–ê–ò¬ª (Health Samurai)"
                                         :location "–†–§, –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥"}
                               :position "–ò–Ω–∂–µ–Ω–µ—Ä-–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç"
                               :period "C –∞–≤–≥—É—Å—Ç–∞ 2019 –≥–æ–¥–∞"
                               :highlights ["–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–æ–π –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã (–†–ú–ò–°) –¥–ª—è –ß—É–≤–∞—à—Å–∫–æ–π —Ä–µ—Å–ø—É–±–ª–∏–∫–∏"
                                            "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (ETL)"
                                            "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞, –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–∏—Å—Ç–µ–º—ã –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏ –∞–≥—Ä–µ–≥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ú–ò–°"
                                            "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ—Ä—Ç–∞–ª–∞ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç –∑–¥–æ—Ä–æ–≤—å—è (PHR), —Ä–∞–±–æ—Ç–∞—é—â–µ–≥–æ –ø–æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ ¬´Smart on FHIR¬ª"
                                            ]
                               :technologies ["Clojure" "AWS" "PostgreSQL" "Kubernetes" "Linux" "FHIR" "Git"]}]
                 :skills [{:name "Go"
                           :photo "./public/logos/golang-icon.svg"}
                          {:name "Clojure"
                           :photo "./public/logos/clojure-icon.svg"}
                          {:name "C/C++"
                           :photo "./public/logos/c-seeklogo.com.svg"}
                          {:name "PostgreSQL"
                           :photo "./public/logos/postgresql-icon.svg"}
                          {:name "Docker"
                           :photo "./public/logos/docker-icon.svg"}
                          {:name "Kubernetes"
                           :photo "./public/logos/kubernetes-icon.svg"}
                          {:name "GTK"
                           :photo "./public/logos/gtk_icon.png"}
                          {:name "QT"
                           :photo "./public/logos/qt_icon.svg"}
                          {:name "AWS"
                           :photo "./public/logos/amazon_aws-icon.svg"}
                          {:name "FreeRTOS"
                           :photo "./public/logos/freertos_icon.svg"}
                          {:name "Git"
                           :photo "./public/logos/git-scm-icon.svg"}
                          {:name "Linux"
                           :photo "./public/logos/linux-icon.svg"}
                          {:name "STM32"
                           :photo "./public/logos/stm32_icon.png"}]})

  )
